#ifndef __PAL_SENSORS_H__
#define __PAL_SENSORS_H__

#include <openbmc/pmbus.h>
#include <openbmc/obmc_pal_sensors.h>
#include "pal_swb_sensors.h"

//Platform Name
#define PLATFORM_NAME "GT"

//NM DEVICE INFO
#define NM_PSU_MUX_ADDR  (0x40)

//CPU INFO
#define PECI_CPU0_ADDR    (0x30)
#define PECI_CPU1_ADDR    (0x31)

enum {
  DIMM_ID0 = 0,
  DIMM_ID1,
  DIMM_ID2,
  DIMM_ID3,
  DIMM_ID4,
  DIMM_ID5,
  DIMM_ID6,
  DIMM_ID7,
  DIMM_ID8,
  DIMM_ID9,
  DIMM_ID10,
  DIMM_ID11,
  DIMM_ID12,
  DIMM_ID13,
  DIMM_ID14,
  DIMM_ID15,
};

enum {
  CFG_SAMPLE_DIABLE = 0,
  CFG_SAMPLE_2,
  CFG_SAMPLE_4,
  CFG_SAMPLE_8,
  CFG_SAMPLE_16,
  CFG_SAMPLE_32,
  CFG_SAMPLE_64,
  CFG_SAMPLE_128,
};

//MP5990 CMD INFO
#define MP5990_SLAVE_ADDR  	(0x40)
#define MP5990_RSENSE      	(0.15)
//#define ADM1272_SLAVE_ADDR0	(0x20) 
//#define ADM1272_SLAVE_ADDR1	(0x26) 
//#define ADM1272_SLAVE_ADDR2	(0x38) 

#define HSC_PEAK_PIN			(0xDA)
#define PMON_CFG_VIN_EN			(1 << 2)
#define PMON_CFG_TEPM1_EN		(1 << 3)
#define PMON_CFG_CONTINUOUS_SAMPLE	(1 << 4)
#define PMON_CFG_VI_AVG(x)		(x << 8)
#define PMON_CFG_AVG_PWR(x)		(x << 11)
#define IOUT_OC_WARN_EN1		(1 << 10)


//FAN
#define FAN_CHIP_CNT		(4)

//Sensor Table
enum {
//MB_SENSOR
  MB_SNR_E1S_P3V3_VOUT = 0x01,
  MB_SNR_E1S_P12V_VOUT = 0x02,
  MB_SNR_E1S_P12V_IOUT = 0x03,
  MB_SNR_E1S_P12V_POUT = 0x04,
  MB_SNR_E1S_TEMP = 0x05,

  MB_SNR_POWER_FAIL = 0x09,
  MB_SNR_PROCESSOR_FAIL = 0x0A,

//MB HSC
  MB_SNR_HSC_VIN = 0x0B,
  MB_SNR_HSC_IOUT = 0x0C,
  MB_SNR_HSC_PIN = 0x0D,
  MB_SNR_HSC_TEMP = 0x0E,
  MB_SNR_HSC_PEAK_PIN = 0x0F,

//MB TEMP
  MB_SNR_INLET_TEMP_R = 0x10,
  MB_SNR_INLET_TEMP_L = 0x11,
  MB_SNR_OUTLET_TEMP_R = 0x12,
  MB_SNR_OUTLET_TEMP_L = 0x13,

//MB CPU TEMP
  MB_SNR_CPU0_TEMP = 0x18,
  MB_SNR_CPU1_TEMP = 0x19,
  MB_SNR_CPU0_THERM_MARGIN = 0x1A,
  MB_SNR_CPU1_THERM_MARGIN = 0x1B,

//MB CPU POWER
  MB_SNR_CPU0_TJMAX = 0x1C,
  MB_SNR_CPU1_TJMAX = 0x1D,
  MB_SNR_CPU0_PKG_POWER = 0x1E,
  MB_SNR_CPU1_PKG_POWER = 0x1F,

//MB DIMM TEMP
  DIMM_SNR_START_INDEX = 0x20,
  MB_SNR_DIMM_CPU0_GRPA_TEMP = 0x20,
  MB_SNR_DIMM_CPU0_GRPB_TEMP = 0x21,
  MB_SNR_DIMM_CPU0_GRPC_TEMP = 0x22,
  MB_SNR_DIMM_CPU0_GRPD_TEMP = 0x23,
  MB_SNR_DIMM_CPU0_GRPE_TEMP = 0x24,
  MB_SNR_DIMM_CPU0_GRPF_TEMP = 0x25,
  MB_SNR_DIMM_CPU0_GRPG_TEMP = 0x26,
  MB_SNR_DIMM_CPU0_GRPH_TEMP = 0x27,
  MB_SNR_DIMM_CPU1_GRPA_TEMP = 0x28,
  MB_SNR_DIMM_CPU1_GRPB_TEMP = 0x29,
  MB_SNR_DIMM_CPU1_GRPC_TEMP = 0x2A,
  MB_SNR_DIMM_CPU1_GRPD_TEMP = 0x2B,
  MB_SNR_DIMM_CPU1_GRPE_TEMP = 0x2C,
  MB_SNR_DIMM_CPU1_GRPF_TEMP = 0x2D,
  MB_SNR_DIMM_CPU1_GRPG_TEMP = 0x2E,
  MB_SNR_DIMM_CPU1_GRPH_TEMP = 0x2F,

//MB CPU0 VR
  MB_SNR_VR_CPU0_VCCIN_VOLT = 0x30,
  MB_SNR_VR_CPU0_VCCIN_TEMP = 0x31,
  MB_SNR_VR_CPU0_VCCIN_CURR = 0x32,
  MB_SNR_VR_CPU0_VCCIN_POWER = 0x33,
  MB_SNR_VR_CPU0_VCCFA_FIVRA_VOLT = 0x34,
  MB_SNR_VR_CPU0_VCCFA_FIVRA_TEMP = 0x35,
  MB_SNR_VR_CPU0_VCCFA_FIVRA_CURR = 0x36,
  MB_SNR_VR_CPU0_VCCFA_FIVRA_POWER = 0x37,
  MB_SNR_VR_CPU0_VCCIN_FAON_VOLT = 0x38,
  MB_SNR_VR_CPU0_VCCIN_FAON_TEMP = 0x39,
  MB_SNR_VR_CPU0_VCCIN_FAON_CURR = 0x3A,
  MB_SNR_VR_CPU0_VCCIN_FAON_POWER = 0x3B,
  MB_SNR_VR_CPU0_VCCFA_VOLT = 0x3C,
  MB_SNR_VR_CPU0_VCCFA_TEMP = 0x3D,
  MB_SNR_VR_CPU0_VCCFA_CURR = 0x3E,
  MB_SNR_VR_CPU0_VCCFA_POWER = 0x3F,
  MB_SNR_VR_CPU0_VCCD_HV_VOLT = 0x40,
  MB_SNR_VR_CPU0_VCCD_HV_TEMP = 0x41,
  MB_SNR_VR_CPU0_VCCD_HV_CURR = 0x42,
  MB_SNR_VR_CPU0_VCCD_HV_POWER = 0x43,

//MB ADC128D818
  MB_SNR_ADC128_P12V_AUX = 0x44,
  NB_SNR_ADC128_P5V = 0x45,
  MB_SNR_ADC128_P3V3 = 0x46,
  MB_SNR_ADC128_P3V3_AUX = 0x47,

//MB CPU1 VR
  MB_SNR_VR_CPU1_VCCIN_VOLT = 0x48,
  MB_SNR_VR_CPU1_VCCIN_TEMP = 0x49,
  MB_SNR_VR_CPU1_VCCIN_CURR = 0x4A,
  MB_SNR_VR_CPU1_VCCIN_POWER = 0x4B,
  MB_SNR_VR_CPU1_VCCFA_FIVRA_VOLT = 0x4C,
  MB_SNR_VR_CPU1_VCCFA_FIVRA_TEMP = 0x4D,
  MB_SNR_VR_CPU1_VCCFA_FIVRA_CURR = 0x4E,
  MB_SNR_VR_CPU1_VCCFA_FIVRA_POWER = 0x4F,
  MB_SNR_VR_CPU1_VCCIN_FAON_VOLT = 0x50,
  MB_SNR_VR_CPU1_VCCIN_FAON_TEMP = 0x51,
  MB_SNR_VR_CPU1_VCCIN_FAON_CURR = 0x52,
  MB_SNR_VR_CPU1_VCCIN_FAON_POWER = 0x53,
  MB_SNR_VR_CPU1_VCCFA_VOLT = 0x54,
  MB_SNR_VR_CPU1_VCCFA_TEMP = 0x55,
  MB_SNR_VR_CPU1_VCCFA_CURR = 0x56,
  MB_SNR_VR_CPU1_VCCFA_POWER = 0x57,
  MB_SNR_VR_CPU1_VCCD_HV_VOLT = 0x58,
  MB_SNR_VR_CPU1_VCCD_HV_TEMP = 0x59,
  MB_SNR_VR_CPU1_VCCD_HV_CURR = 0X5A,
  MB_SNR_VR_CPU1_VCCD_HV_POWER = 0X5B,

//MB ADC BAT
  MB_SNR_P3V_BAT =0x5E,
//MB PCH TEMP
  MB_SNR_PCH_TEMP = 0x5F,

  MB_SNR_DIMM_CPU0_A0_POWER = 0x60,
  MB_SNR_DIMM_CPU0_C0_POWER = 0x61,
  MB_SNR_DIMM_CPU0_A1_POWER = 0x62,
  MB_SNR_DIMM_CPU0_C1_POWER = 0x63,
  MB_SNR_DIMM_CPU0_A2_POWER = 0x64,
  MB_SNR_DIMM_CPU0_C2_POWER = 0x65,
  MB_SNR_DIMM_CPU0_A3_POWER = 0x66,
  MB_SNR_DIMM_CPU0_C3_POWER = 0x67,
  MB_SNR_DIMM_CPU0_A4_POWER = 0x68,
  MB_SNR_DIMM_CPU0_C4_POWER = 0x69,
  MB_SNR_DIMM_CPU0_A5_POWER = 0x6A,
  MB_SNR_DIMM_CPU0_C5_POWER = 0x6B,
  MB_SNR_DIMM_CPU0_A6_POWER = 0x6C,
  MB_SNR_DIMM_CPU0_C6_POWER = 0x6D,
  MB_SNR_DIMM_CPU0_A7_POWER = 0x6E,
  MB_SNR_DIMM_CPU0_C7_POWER = 0x6F,

  MB_SNR_DIMM_CPU1_B0_POWER = 0x70,
  MB_SNR_DIMM_CPU1_D0_POWER = 0x71,
  MB_SNR_DIMM_CPU1_B1_POWER = 0x72,
  MB_SNR_DIMM_CPU1_D1_POWER = 0x73,
  MB_SNR_DIMM_CPU1_B2_POWER = 0x74,
  MB_SNR_DIMM_CPU1_D2_POWER = 0x75,
  MB_SNR_DIMM_CPU1_B3_POWER = 0x76,
  MB_SNR_DIMM_CPU1_D3_POWER = 0x77,
  MB_SNR_DIMM_CPU1_B4_POWER = 0x78,
  MB_SNR_DIMM_CPU1_D4_POWER = 0x79,
  MB_SNR_DIMM_CPU1_B5_POWER = 0x7A,
  MB_SNR_DIMM_CPU1_D5_POWER = 0x7B,
  MB_SNR_DIMM_CPU1_B6_POWER = 0x7C,
  MB_SNR_DIMM_CPU1_D6_POWER = 0x7D,
  MB_SNR_DIMM_CPU1_B7_POWER = 0x7E,
  MB_SNR_DIMM_CPU1_D7_POWER = 0x7F,


//NIC SENSOR
  NIC0_SNR_MEZZ0_P3V3_VOUT = 0x80,
  NIC0_SNR_MEZZ0_P12V_VOUT = 0x81,
  NIC0_SNR_MEZZ0_P12V_IOUT = 0x82,
  NIC0_SNR_MEZZ0_P12V_POUT = 0x83,
  NIC0_SNR_MEZZ0_TEMP = 0x84,

  NIC1_SNR_MEZZ1_P3V3_VOUT = 0x88,
  NIC1_SNR_MEZZ1_P12V_VOUT = 0x89,
  NIC1_SNR_MEZZ1_P12V_IOUT = 0x8A,
  NIC1_SNR_MEZZ1_P12V_POUT = 0x8B,
  NIC1_SNR_MEZZ1_TEMP = 0x8C,

//PDBV SENSOR
  PDBV_SNR_HSC0_VIN = 0x90,
  PDBV_SNR_HSC0_IOUT = 0x91,
  PDBV_SNR_HSC0_PIN = 0x92,
  PDBV_SNR_HSC0_TEMP = 0x93,
  PDBV_SNR_HSC0_PEAK_PIN = 0x94,

  PDBV_SNR_BRICK0_VOUT = 0x95,
  PDBV_SNR_BRICK0_IOUT = 0x96,
  PDBV_SNR_BRICK0_TEMP = 0x97,
  PDBV_SNR_BRICK0_POUT = 0x98,
  PDBV_SNR_BRICK1_VOUT = 0x99,
  PDBV_SNR_BRICK1_IOUT = 0x9A,
  PDBV_SNR_BRICK1_TEMP = 0x9B,
  PDBV_SNR_BRICK1_POUT = 0x9C,
  PDBV_SNR_BRICK2_VOUT = 0x9D,
  PDBV_SNR_BRICK2_IOUT = 0x9E,
  PDBV_SNR_BRICK2_TEMP = 0x9F,
  PDBV_SNR_BRICK2_POUT = 0xA0,
  PDBV_SNR_ADC128_P3V3_AUX =0xA1,

//PDBH SENSOR
  PDBH_SNR_HSC1_VIN = 0xB0,
  PDBH_SNR_HSC1_IOUT = 0xB1,
  PDBH_SNR_HSC1_PIN = 0xB2,
  PDBH_SNR_HSC1_TEMP = 0xB3,
  PDBH_SNR_HSC1_PEAK_PIN = 0xB4,

  PDBH_SNR_HSC2_VIN = 0xB5,
  PDBH_SNR_HSC2_IOUT = 0xB6,
  PDBH_SNR_HSC2_PIN = 0xB7,
  PDBH_SNR_HSC2_TEMP = 0xB8,
  PDBH_SNR_HSC2_PEAK_PIN = 0xB9,

//FAN SENSOR
  FAN_SNR_START_INDEX = 0xD0,
  BP0_SNR_FAN0_INLET_SPEED = 0xD0,
  BP0_SNR_FAN0_OUTLET_SPEED = 0xD1,
  BP0_SNR_FAN1_INLET_SPEED = 0xD2,
  BP0_SNR_FAN1_OUTLET_SPEED = 0xD3,
  BP1_SNR_FAN2_INLET_SPEED = 0xD4,
  BP1_SNR_FAN2_OUTLET_SPEED = 0xD5,
  BP1_SNR_FAN3_INLET_SPEED = 0xD6,
  BP1_SNR_FAN3_OUTLET_SPEED = 0xD7,
  BP0_SNR_FAN4_INLET_SPEED = 0xD8,
  BP0_SNR_FAN4_OUTLET_SPEED = 0xD9,
  BP0_SNR_FAN5_INLET_SPEED = 0xDA,
  BP0_SNR_FAN5_OUTLET_SPEED = 0xDB,
  BP1_SNR_FAN6_INLET_SPEED = 0xDC,
  BP1_SNR_FAN6_OUTLET_SPEED = 0xDD,
  BP1_SNR_FAN7_INLET_SPEED = 0xDE,
  BP1_SNR_FAN7_OUTLET_SPEED = 0xDF,

  BP0_SNR_FAN8_INLET_SPEED = 0xE0,
  BP0_SNR_FAN8_OUTLET_SPEED = 0xE1,
  BP0_SNR_FAN9_INLET_SPEED = 0xE2,
  BP0_SNR_FAN9_OUTLET_SPEED = 0xE3,
  BP1_SNR_FAN10_INLET_SPEED = 0xE4,
  BP1_SNR_FAN10_OUTLET_SPEED = 0xE5,
  BP1_SNR_FAN11_INLET_SPEED = 0xE6,
  BP1_SNR_FAN11_OUTLET_SPEED = 0xE7,
  BP0_SNR_FAN12_INLET_SPEED = 0xE8,
  BP0_SNR_FAN12_OUTLET_SPEED = 0xE9,
  BP0_SNR_FAN13_INLET_SPEED = 0xEA,
  BP0_SNR_FAN13_OUTLET_SPEED = 0xEB,
  BP1_SNR_FAN14_INLET_SPEED = 0xEC,
  BP1_SNR_FAN14_OUTLET_SPEED = 0xED,
  BP1_SNR_FAN15_INLET_SPEED = 0xEE,
  BP1_SNR_FAN15_OUTLET_SPEED = 0xEF,

 //SCM ADC
  SCM_SNR_P12V = 0xF0,
  SCM_SNR_P5V  = 0xF1,
  SCM_SNR_P3V3 = 0xF2,
  SCM_SNR_P2V5 = 0xF3,
  SCM_SNR_P1V8 = 0xF4,
  SCM_SNR_PGPPA = 0xF5,
  SCM_SNR_P1V2 = 0xF6,
  SCM_SNR_P1V0 = 0xF7,
 //SCM Voltage
  SCM_SNR_BMC_P12V_VOUT = 0xF8,
  SCM_SNR_BMC_P12V_IOUT = 0xF9,
  SCM_SNR_BMC_P12V_POUT = 0xFA,
 //SCM TEMP
  SCM_SNR_BMC_TEMP = 0xFB
};

typedef struct {
  float ucr_thresh;
  float unc_thresh;
  float unr_thresh;
  float lcr_thresh;
  float lnc_thresh;
  float lnr_thresh;
  float pos_hyst;
  float neg_hyst;
} PAL_SENSOR_THRESHOLD;

enum {
  TEMP = 1,
  CURR,
  VOLT,
  FAN,
  POWER,
  STATE,
};

typedef struct {
  char* snr_name;
  uint8_t id;
  int (*read_sensor) (uint8_t fru, uint8_t sensor_num, float *value);
  uint8_t stby_read;
  PAL_SENSOR_THRESHOLD snr_thresh;
  uint8_t units;
} PAL_SENSOR_MAP;

//ADC INFO
enum {
  ADC0 = 0,
  ADC1,
  ADC2,
  ADC3,
  ADC4,
  ADC5,
  ADC6,
  ADC7,
  ADC8,
  ADC9,
  ADC10,
  ADC11,
  ADC12,
  ADC13,
  ADC14,
  ADC_NUM_CNT,
};

enum {
  ADC128_0 = 0,
  ADC128_NUM_CNT,
};


//GENERIC I2C Sensors


enum {
  TEMP_OUTLET_L = 0,
  TEMP_INLET_L,
  TEMP_OUTLET_R,
  TEMP_INLET_R,
  TEMP_BMC,
  TEMP_MEZZ0,
  TEMP_MEZZ1,
};

//NIC INFO
enum {
  MEZZ0 = 0,
  MEZZ1,
  MEZZ_CNT,
};

//HARD DISK INFO
enum {
  DISK_BOOT = 0,
};

//HSC INFO
enum {
  HSC_VOLTAGE = 0,
  HSC_CURRENT,
  HSC_POWER,
  HSC_TEMP,
};

typedef struct {
  uint8_t type;
  float m;
  float b;
  float r;
} PAL_ATTR_INFO;

//12V HSC INFO
enum {
  HSC_ID0,
  HSC_12V_CNT,
};

//48V HSC INFO
enum {
  HSC_48V_ID0,
  HSC_48V_ID1,
  HSC_48V_ID2,
  HSC_48V_CNT,
};

//BRICK INFO
enum {
  BRICK_ID0,
  BRICK_ID1,
  BRICK_ID2,
  BRICK_CNT,
};

typedef struct {
  uint8_t id;
  uint8_t bus;
  uint8_t addr;
  PAL_ATTR_INFO* info;
} PAL_HSC_INFO;

//NM ID
enum {
  NM_ID0,
};

//PCH SENSOR INFO
enum {
  NM_PCH_TEMP = 8,
};

typedef struct {
  uint8_t id;
  uint8_t addr;
  uint8_t identify;
} PAL_DIMM_PMIC_INFO;


//FAN IC ID
enum {
  FAN_CHIP_ID0,
  FAN_CHIP_ID1,
  FAN_CHIP_ID2,
  FAN_CHIP_ID3,
};

typedef struct {
  uint8_t id;
  uint8_t bus;
  uint8_t slv_addr;
} PAL_I2C_BUS_INFO;

typedef struct {
  uint8_t id;
  uint8_t bus;
  uint8_t slv_addr;
  float vbus_scale;
  float curr_scale;
  float pwr_scale;
} PAL_DPM_DEV_INFO;

//BIC SENSOR INFO
enum {
  BIC_SNR_CNT,
};

typedef struct {
  uint8_t id;
  uint8_t num;
} PAL_BIC_SENSOR_HEAD;

typedef struct {
  uint8_t snr_num;
  uint8_t available;
  uint8_t val_h;
  uint8_t val_l;
} PAL_BIC_SENSOR_INFO;

//VR  INFO
enum {
  VR_ID0 = 0,
  VR_ID1,
  VR_ID2,
  VR_ID3,
  VR_ID4,
  VR_ID5,
  VR_ID6,
  VR_ID7,
  VR_ID8,
  VR_ID9,
  VR_NUM_CNT,
};

enum {
  DPM_0,
  DPM_1,
  DPM_2,
  DPM_3,
  DPM_4,
};

enum {
  E1S_0,
};

enum {
  PCA9545_CH1 = 1,
  PCA9545_CH2 = 2,
  PCA9545_CH3 = 4,
  PCA9545_CH4 = 8,
  PCA9545_NOT_USE,
};

//FAN INFO
enum {
  FAN_TACH_ID0 = 0,
  FAN_TACH_ID1,
  FAN_TACH_ID2,
  FAN_TACH_ID3,
  FAN_TACH_ID4,
  FAN_TACH_ID5,
  FAN_TACH_ID6,
  FAN_TACH_ID7,
  FAN_TACH_ID8,
  FAN_TACH_ID9,
  FAN_TACH_ID10,
  FAN_TACH_ID11,
  FAN_TACH_ID12,
  FAN_TACH_ID13,
  FAN_TACH_ID14,
  FAN_TACH_ID15,
  FAN_TACH_ID16,
  FAN_TACH_ID17,
  FAN_TACH_ID18,
  FAN_TACH_ID19,
  FAN_TACH_ID20,
  FAN_TACH_ID21,
  FAN_TACH_ID22,
  FAN_TACH_ID23,
  FAN_TACH_ID24,
  FAN_TACH_ID25,
  FAN_TACH_ID26,
  FAN_TACH_ID27,
  FAN_TACH_ID28,
  FAN_TACH_ID29,
  FAN_TACH_ID30,
  FAN_TACH_ID31,
  FAN_TACH_CNT,
};
enum {
  FAN_PWM_ID0 = 0,
  FAN_PWM_ID1,
  FAN_PWM_ID2,
  FAN_PWM_ID3,
  FAN_PWM_ID4,
  FAN_PWM_ID5,
  FAN_PWM_ID6,
  FAN_PWM_ID7,
  FAN_PWM_ID8,
  FAN_PWM_ID9,
  FAN_PWM_ID10,
  FAN_PWM_ID11,
  FAN_PWM_ID12,
  FAN_PWM_ID13,
  FAN_PWM_ID14,
  FAN_PWM_ID15,
  FAN_PWM_CNT,
};

typedef struct {
  uint8_t mode;
  uint8_t position;
  uint8_t type;
} BMC_SYSTEM_INFO;

int pal_sensor_monitor_initial(void);
bool pal_check_nic_prsnt(uint8_t fru);
bool pal_check_dimm_prsnt(uint8_t snr_num);

extern size_t pal_pwm_cnt;
extern size_t pal_tach_cnt;
extern const char pal_pwm_list[];
extern const char pal_tach_list[];
extern const char pal_fru_list[];
extern const char pal_server_list[];
#endif
